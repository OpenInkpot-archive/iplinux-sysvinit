#! /bin/sh
#
# rcS		Call all S??* scripts in /etc/rcS.d in
#		numerical/alphabetical order.
#
# Version:	@(#)/etc/init.d/rcS  2.76  19-Apr-1999  miquels@cistron.nl
#

PATH=/sbin:/bin:/usr/sbin:/usr/bin
runlevel=S
prevlevel=N
umask 022
export PATH runlevel prevlevel

#
#	See if system needs to be setup. This is ONLY meant to
#	be used for the initial setup after a fresh installation!
#
if [ -x /sbin/unconfigured.sh ]
then
  /sbin/unconfigured.sh
fi

#
#	Source defaults.
#
. /etc/default/rcS
export VERBOSE

#
#	Trap CTRL-C &c only in this shell so we can interrupt subprocesses.
#
trap ":" INT QUIT TSTP

#
#	Splash progress bar support
#
if [ -e /sbin/splash-functions ]; then
	. /sbin/splash-functions
else
	splash_progress() { return 1; }
fi

#
# Stub to do progress bar ticks
#
startup_progress() {
    # Avoid divide by zero
    if [ 0 -eq "$num_steps" ] ; then return; fi

	step=$(($step + 1))
	progress=$((100 * $step / $num_steps))
	splash_progress "$progress" || true
}

#
# Count the number of scripts
#
num_steps=0
for s in /etc/rcS.d/S??* /etc/rc2.d/S??*; do
	[ ! -f "$s" ] && continue
	num_steps=$(($num_steps + 1))
done
step=0

#
#	Call all parts in order.
#

for i in /etc/rcS.d/S??*
do
	# Ignore dangling symlinks for now.
	[ ! -f "$i" ] && continue

	case "$i" in
		*.sh)
			# Source shell script for speed.
			(
				trap - INT QUIT TSTP
				set start
				. $i
			)
			;;
		*)
			# No sh extension, so fork subprocess.
			$i start
			;;
	esac

	startup_progress
done

#
#	For compatibility, run the files in /etc/rc.boot too.
#
[ -d /etc/rc.boot ] && run-parts /etc/rc.boot

#
#	Finish setup if needed. The comment above about
#	/sbin/unconfigured.sh applies here as well!
#
if [ -x /sbin/setup.sh ]
then
  /sbin/setup.sh
fi

#
#   Run 2nd runlevel here, since we don't have runlevel
#   support in busybox
#
if [ -x /etc/init.d/rc ]
then
  /etc/init.d/rc 2
fi

splash_progress "100"
splash_progress "exit"
